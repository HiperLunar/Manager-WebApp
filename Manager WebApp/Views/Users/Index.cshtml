@model PaginatedList<Manager_WebApp.Models.User>

@{
    ViewData["Title"] = "Index";
}

<h1>Users</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="search" value="@ViewData["search"]" />
                          <input type="submit" value="Search" class="btn btn-default" />
                          | <a asp-action="Index">Reset filter</a>
        </p>
    </div>
</form>
<p>Result count: @Model.Count</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sort="Name"
                   asp-route-currentFilter="@ViewData["search"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Name)</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sort="Age"
                   asp-route-currentFilter="@ViewData["search"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Age)</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sort="Email"
                   asp-route-currentFilter="@ViewData["search"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Email)</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sort="Description"
                   asp-route-currentFilter="@ViewData["search"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Description)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-route-sort="@ViewData["currentSort"]"
   asp-route-page=@(Model.PageIndex -1)
   asp-route-currentFilter="@ViewData["currentFilter"]"
   class="btn btn-default @prevDisabled">Previous</a>
<a asp-route-sort="@ViewData["currentSort"]"
   asp-route-page=@(Model.PageIndex +1)
   asp-route-currentFilter="@ViewData["currentFilter"]"
   class="btn btn-default @nextDisabled">Next</a>
